#!/bin/sh
set -eu

DIR="$(realpath "$(dirname "$0" )" )"
cd "$DIR"

# You MUST make sure that we are in a correct environment.
test -z "$INOSENV" && {
  echo "You cannot run this script while not in the mimuxenv!" && \
  exit 1;
}

VERSION="2.41.1"
TAG="$(echo $VERSION | awk -F. '{print "v" $1 "." $2}')"
BASEURL="https://www.kernel.org/pub/linux/utils/util-linux/$TAG"
SRCDIR="util-linux-$VERSION"
TARBALL="$SRCDIR.tar.xz"

download() {
  cd "$DIR"
  echo "downloading util-linux source..."
  if test -f "$TARBALL"; then
    echo "$TARBALL exists, skipping..."
    return
  fi

  curl -LOf "$BASEURL/$TARBALL"
}

extract() {
  cd "$DIR"
  echo "extracting util-linux source..."
  if ! test -f "$TARBALL"; then
    echo "No tarball to operate on!"
    exit 1
  fi

  tar xf "$TARBALL"
  cd "$SRCDIR"
  ./configure --prefix="/usr" --exec-prefix="/usr"\
    --without-python\
    --disable-nls\
    --with-sysroot="${ROOTFS:-/}"\
    --without-systemd\
    --disable-all-programs\
    --enable-dmesg\
    --enable-libblkid\
    --enable-blkid\
    --enable-libsmartcols\
    --enable-libmount\
    --enable-lsblk\
    --enable-chsh
}

makeinstall() {
  echo "building util-linux..."
  if ! test -d "$DIR/$SRCDIR"; then
    echo "No source directory to operate on!"
    exit 1
  fi
  cd "$DIR/$SRCDIR"

  make -j"${JOBS:-8}"
  make -j"${JOBS:-8}" DESTDIR="$ROOTFS" install

}

clear() {
  cd "$DIR"
  rm -rf ./*.tgz ./*.tar.xz ./*.tar.bz2 ./*.tar.gz "$SRCDIR" "$TARBALL"
}

cd "$DIR"
case "$1" in
  download|d)
    download
    ;;
  extract|e)
    extract
    ;;
  makeinstall|mi)
    makeinstall
    ;;
  clear|clean|c)
    clear
    ;;
  all|a)
    download && extract && makeinstall
    ;;
  *)
    cat <<EOF
Build script for util-linux

download|d -> download the tarball
extract|e -> extract and patch the tarball
makeinstall|mi -> make and install the build artifacts
clear|clean|c -> clean all artifacts
all|a -> clean, and then go through everything.
EOF
    exit 1
    ;;
esac

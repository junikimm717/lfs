#!/bin/sh

DIR="$(realpath "$(dirname "$0" )" )"
cd "$DIR" || exit 1

# You MUST make sure that we are in a correct environment.
test -z "$INOSENV" && {
  echo "You cannot run this script while not in the juniosenv!" && \
  exit 1;
}

VERSION="3.13.3"
BASEURL="https://www.python.org/ftp/python/$VERSION"
SRCDIR="Python-$VERSION"
TARBALL="$SRCDIR.tar.xz"

download() {
  cd "$DIR" || exit 1
  echo "downloading python3 source..."
  if test -f "$TARBALL"; then
    echo "$TARBALL exists, skipping..."
    return
  fi

  set -x
  curl -LOf $BASEURL/$TARBALL
  set +x
}

extract() {
  cd "$DIR" || exit 1
  echo "extracting python3 source..."
  if ! test -f "$TARBALL"; then
    echo "No tarball to operate on!"
    exit 1
  fi

  tar xf "$TARBALL" || exit 1
  cd "$SRCDIR" || exit 1
  cp -a "$DIR/Setup" ./Modules/Setup.local || exit 1
  ./configure --prefix="/usr" --exec-prefix="/usr"\
    --with-sysroot="${ROOTFS:-/}"\
    --with-openssl="$ROOTFS/usr"\
    --enable-shared \
    --disable-static \
    CFLAGS="$CFLAGS -fPIC --sysroot=$ROOTFS/usr"\
    LDFLAGS="$LDFLAGS --sysroot=$ROOTFS/usr"
}

makeinstall() {
  echo "building python3..."
  if ! test -d "$DIR/$SRCDIR"; then
    echo "No source directory to operate on!"
    exit 1
  fi
  cd "$DIR/$SRCDIR" || exit 1

  make -j${JOBS:-8} || exit 1
  make -j${JOBS:-8} DESTDIR=$ROOTFS install || exit 1
  ln -sfn python3.13 "$ROOTFS/usr/bin/python3"
  # reduce bloat.
  rm -rf "$ROOTFS/usr/lib/python3.13/test"
  rm -rf "$ROOTFS/usr/lib/python3.13/config-3*"
}

clear() {
  cd "$DIR" || exit 1
  rm -rf ./*.tgz ./*.tar.xz ./*.tar.bz2 ./*.tar.gz "$SRCDIR" "$TARBALL"
}

cd "$DIR" || exit 1
case "$1" in
  download|d)
    download
    ;;
  extract|e)
    extract
    ;;
  makeinstall|mi)
    makeinstall
    ;;
  clear|clean|c)
    clear
    ;;
  all|a)
    download && extract && makeinstall
    ;;
  *)
    cat <<EOF
Build script for python3

download|d -> download the tarball
extract|e -> extract and patch the tarball
makeinstall|mi -> make and install the build artifacts
clear|clean|c -> clean all artifacts
all|a -> clean, and then go through everything.
EOF
    exit 1
    ;;
esac

#!/bin/sh

DIR="$(realpath "$(dirname "$0" )" )"
cd "$DIR" || exit 1

# You MUST make sure that we are in a correct environment.
test -z "$INOSENV" && \
  echo "You cannot run this script while not in the juniosenv!" && \
  exit 1

#VERSION="6.12.30"
VERSION="6.14.8"
BASEURL="cdn.kernel.org/pub/linux/kernel/v$(echo "$VERSION" | cut -d'.' -f 1 ).x"
SRCDIR="linux-$VERSION"
TARBALL="$SRCDIR.tar.xz"

download() {
  cd "$DIR" || exit 1
  if test -f "$TARBALL"; then
    echo "$TARBALL exists, skipping..."
    return
  fi
  echo "downloading kernel source"
  curl -LOf "$BASEURL/$TARBALL"
}

_runwithflags() {
  "$@" \
    HOSTCC="$(PATH=/bin:/usr/bin:/usr/local/bin:/usr/sbin:/sbin command -v gcc)"\
    HOSTCXX="$(PATH=/bin:/usr/bin:/usr/local/bin:/usr/sbin:/sbin command -v g++)"
}

extract() {
  cd "$DIR" || exit 1
  echo "extracting kernel source and applying config..."
  if ! test -f "$TARBALL"; then
    echo "$TARBALL does not exist!!"
    exit 1
  fi
  tar xf "$TARBALL"
  cp -p "./configs/custom.config" "$SRCDIR/.config"
  cd "$DIR/$SRCDIR" || exit 1
}


makeinstall() {
  cd "$DIR" || exit 1
  ! test -e "$SRCDIR" && { echo "You must have $SRCDIR prepared first!" && exit 1; }
  echo "compiling and installing header"
  cd "$DIR/$SRCDIR" || exit 1
  _runwithflags make olddefconfig
  _runwithflags make -j8
  _runwithflags make -j8 headers_install INSTALL_HDR_PATH=$ROOTFS/usr
  _runwithflags make -j8 INSTALL_MOD_PATH=$ROOTFS modules_install
  _runwithflags make -j8 INSTALL_PATH=$DIST/rootfs/boot install
}

clear() {
  cd "$DIR" || exit 1
  rm -rf *.tgz *.tar.xz "$SRCDIR" "$TARBALL"
}

cd "$DIR" || exit 1
case "$1" in
  download|d)
    download
    ;;
  extract|e)
    extract
    ;;
  de)
    download && extract
    ;;
  makeinstall|mi)
    makeinstall
    ;;
  clear|clean|c)
    clear
    ;;
  all|a)
    download && extract && makeinstall
    ;;
  *)
    cat <<EOF
Build script for musl-cross-make on macos

download|d -> download the tarball
extract|e -> extract and patch the tarball
de -> download and extract (installs headers)
makeinstall|mi -> make and install the tarball into ../gcc
clear|clean|c -> clean everything except the tarballs (prevent extra downloads)
all|a -> clean, and then go through everything.
EOF
    exit 1
    ;;
esac
